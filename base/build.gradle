plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

android {
    namespace 'com.bonepeople.android.base'
    compileSdk rootProject.androidConfig.compileSdk
    defaultConfig {
        minSdk rootProject.androidConfig.minSdk
        targetSdk rootProject.androidConfig.targetSdk
        buildConfigField("String", "VERSION", """ "${rootProject.androidConfig.versionName}" """)

        consumerProguardFiles "consumer-rules.pro"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        buildConfig true
    }
    // Document https://developer.android.com/build/publish-library/configure-pub-variants
    publishing {
        singleVariant('release') {
            withSourcesJar()
        }
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.github.bonepeople:Shade:1.6.0'
    api 'androidx.fragment:fragment-ktx:1.6.2'

    // com.github.bonepeople:AndroidWidget:publish-SNAPSHOT
    api 'com.github.bonepeople:AndroidWidget:1.7.1'

    // ImmersionBar https://github.com/gyf-dev/ImmersionBar
    api 'com.geyifeng.immersionbar:immersionbar:3.2.2'
    api 'com.geyifeng.immersionbar:immersionbar-ktx:3.2.2'

    // Paging https://developer.android.google.cn/topic/libraries/architecture/paging/v3-overview
    implementation("androidx.paging:paging-runtime-ktx:3.1.1")

    // AppStartup https://developer.android.google.cn/topic/libraries/app-startup?hl=zh-cn
    implementation "androidx.startup:startup-runtime:1.1.1"
}

// Document https://developer.android.com/build/publish-library/upload-library
publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            groupId = rootProject.publishConfig.groupId
            artifactId = rootProject.publishConfig.artifactId
            version = rootProject.publishConfig.publishVersion
        }
    }
}